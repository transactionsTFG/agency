
package ucm.tfg.agency.soapclient.user;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UserWS", targetNamespace = "http://soap/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserWS {


    /**
     * 
     * @param user
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "registerUser", targetNamespace = "http://soap/", className = "ucm.tfg.agency.soapclient.user.RegisterUser")
    @ResponseWrapper(localName = "registerUserResponse", targetNamespace = "http://soap/", className = "ucm.tfg.agency.soapclient.user.RegisterUserResponse")
    @Action(input = "http://soap/UserWS/registerUserRequest", output = "http://soap/UserWS/registerUserResponse")
    public long registerUser(
        @WebParam(name = "user", targetNamespace = "")
        UserRegisterSOAP user);

    /**
     * 
     * @param user
     * @return
     *     returns ucm.tfg.agency.soapclient.user.UserDTO
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "loginUser", targetNamespace = "http://soap/", className = "ucm.tfg.agency.soapclient.user.LoginUser")
    @ResponseWrapper(localName = "loginUserResponse", targetNamespace = "http://soap/", className = "ucm.tfg.agency.soapclient.user.LoginUserResponse")
    @Action(input = "http://soap/UserWS/loginUserRequest", output = "http://soap/UserWS/loginUserResponse")
    public UserDTO loginUser(
        @WebParam(name = "user", targetNamespace = "")
        UserLoginSOAP user);

}
